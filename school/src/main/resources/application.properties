# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/ourrest
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-54-197-234-117.compute-1.amazonaws.com:5432/d33kigtvcgck8f?user=eqgeerexxufsav&password=771e57c66018fb04e5f06bdcc598646dc09feea921597fa7336a0d73cb7405ab&sslmode=require}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:eqgeerexxufsav}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:771e57c66018fb04e5f06bdcc598646dc09feea921597fa7336a0d73cb7405ab}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# For H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
server.port=${PORT:2019}
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

#postgres://eqgeerexxufsav:771e57c66018fb04e5f06bdcc598646dc09feea921597fa7336a0d73cb7405ab@ec2-54-197-234-117.compute-1.amazonaws.com:5432/d33kigtvcgck8f


